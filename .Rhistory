install.packages('httr')
install.packages('tidyverse')
install.packages('jsonlite')
path <- 'https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/history'
request <- GET(url = path,
query = list(
aggregateHours=24,
startDateTime='2017-01-01T00%3A00%3A00',
endDateTime='2019-12-31T00%3A00%3A00',
collectStationContributions='false',
maxStations=-1,
maxDistance=-1,
includeNormals='false',
shortColumnNames='false',
sendAsDataSource='false',
allowAsynch='false',
contentType='csv',
unitGroup='us',
key='CCZKWZ2TPJCPLQ5JDCH5QPCA',
locations='Gaithersburg%2C%20MD')
)
# Load all the necessary packages
library(tidyverse)
library(httr)
library(jsonlite)
request <- GET(url = path,
query = list(
aggregateHours=24,
startDateTime='2017-01-01T00%3A00%3A00',
endDateTime='2019-12-31T00%3A00%3A00',
collectStationContributions='false',
maxStations=-1,
maxDistance=-1,
includeNormals='false',
shortColumnNames='false',
sendAsDataSource='false',
allowAsynch='false',
contentType='csv',
unitGroup='us',
key='CCZKWZ2TPJCPLQ5JDCH5QPCA',
locations='Gaithersburg%2C%20MD')
)
request$status_code
path <- 'https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/history?'
request <- GET(url = path,
query = list(
aggregateHours=24,
startDateTime='2017-01-01T00%3A00%3A00',
endDateTime='2019-12-31T00%3A00%3A00',
collectStationContributions=false,
maxStations=-1,
maxDistance=-1,
includeNormals=false,
shortColumnNames=false,
sendAsDataSource=false,
allowAsynch=false,
contentType='csv',
unitGroup='us',
key='CCZKWZ2TPJCPLQ5JDCH5QPCA',
locations='Gaithersburg%2C%20MD')
)
request <- GET(url = path,
query = list(
aggregateHours='24',
startDateTime='2017-01-01T00%3A00%3A00',
endDateTime='2019-12-31T00%3A00%3A00',
collectStationContributions='false',
maxStations='-1',
maxDistance='-1',
includeNormals='false',
shortColumnNames='false',
sendAsDataSource='false',
allowAsynch='false',
contentType='csv',
unitGroup='us',
key='CCZKWZ2TPJCPLQ5JDCH5QPCA',
locations='Gaithersburg%2C%20MD')
)
request$status_code
path <- 'https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/history'
request <- GET(url = path,
query = list(
aggregateHours='24',
startDateTime='2017-01-01T00%3A00%3A00',
endDateTime='2019-12-31T00%3A00%3A00',
collectStationContributions='false',
maxStations='-1',
maxDistance='-1',
includeNormals='false',
shortColumnNames='false',
sendAsDataSource='false',
allowAsynch='false',
contentType='csv',
unitGroup='us',
key='CCZKWZ2TPJCPLQ5JDCH5QPCA',
locations='Gaithersburg%2C%20MD')
)
request$status_code
pathWithQuery <- 'https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/history?
aggregateHours=1&startDateTime=2017-01-01T00%3A00%3A00&endDateTime=2019-12-31T00%3A00%3A00&collectStationContributions=false
&maxStations=-1&maxDistance=-1&includeNormals=false&shortColumnNames=false&sendAsDatasource=false&allowAsynch=false&contentType=csv
&unitGroup=us&key=CCZKWZ2TPJCPLQ5JDCH5QPCA8&locations=Gaithersburg%2C%20MD'
request <- GET(pathWithQuery)
pathWithQuery <- 'https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/history?aggregateHours=1&
startDateTime=2017-01-01T00%3A00%3A00&endDateTime=2019-12-31T00%3A00%3A00&collectStationContributions=false&maxStations=-1&
maxDistance=-1&includeNormals=false&shortColumnNames=false&sendAsDatasource=false&allowAsynch=false&contentType=csv&unitGroup=us
&key=CCZKWZ2TPJCPLQ5JDCH5QPCA8&locations=Gaithersburg%2C%20MD'
request <- GET(pathWithQuery)
url.show('https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/history?aggregateHours=1&
startDateTime=2017-01-01T00%3A00%3A00&endDateTime=2019-12-31T00%3A00%3A00&collectStationContributions=false&maxStations=-1&
maxDistance=-1&includeNormals=false&shortColumnNames=false&sendAsDatasource=false&allowAsynch=false&contentType=csv&unitGroup=us
&key=CCZKWZ2TPJCPLQ5JDCH5QPCA8&locations=Gaithersburg%2C%20MD')
url_parse(query_path)
install.packages('urltools')
# Load all the necessary packages
library(urltools)
url_parse(query_path)
query_path <- 'https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/history?aggregateHours=1&
startDateTime=2017-01-01T00%3A00%3A00&endDateTime=2019-12-31T00%3A00%3A00&collectStationContributions=false&maxStations=-1&
maxDistance=-1&includeNormals=false&shortColumnNames=false&sendAsDatasource=false&allowAsynch=false&contentType=csv&unitGroup=us
&key=CCZKWZ2TPJCPLQ5JDCH5QPCA8&locations=Gaithersburg%2C%20MD'
url_parse(query_path)
urlbreakdown <- url_parse(query_path)
URLdecode(query_path)
# Load all the necessary packages
library(urltools)
query_path <- 'https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/history?aggregateHours=1&
startDateTime=2017-01-01T00%3A00%3A00&endDateTime=2019-12-31T00%3A00%3A00&collectStationContributions=false&maxStations=-1&
maxDistance=-1&includeNormals=false&shortColumnNames=false&sendAsDatasource=false&allowAsynch=false&contentType=csv&unitGroup=us
&key=CCZKWZ2TPJCPLQ5JDCH5QPCA8&locations=Gaithersburg%2C%20MD'
url <- URLdecode(query_path)
urlbreakdown <- url_parse(url)
urlbreakdown <- param_get(url)
query_path <- 'https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/history?aggregateHours=1&
startDateTime=2017-01-01T00%3A00%3A00&endDateTime=2019-12-31T00%3A00%3A00&collectStationContributions=false&maxStations=-1&
maxDistance=-1&includeNormals=false&shortColumnNames=false&sendAsDatasource=false&allowAsynch=false&contentType=csv&unitGroup=us&
key=CCZKWZ2TPJCPLQ5JDCH5QPCA8&locations=Gaithersburg%2C%20MD'
url <- URLdecode(query_path)
urlbreakdown <- param_get(url)
url_parse(url)
base_path = url_parse(url)$`domain port` + url_parse(url)$path
base_path = paste(url_parse(url)$`domain port`, url_parse(url)$path)
base_path = paste(url_parse(url)$domain, url_parse(url)$path)
base_path = paste(url_parse(url)$scheme,'.',url_parse(url)$domain, url_parse(url)$path)
base_path = paste(url_parse(url)$scheme,'://',url_parse(url)$domain,'/',url_parse(url)$path,sep = "")
urlbreakdown <- param_get(url)
urlbreakdown['aggregateHours']
aggregateHours=urlbreakdown['aggregateHours']
character(urlbreakdown['aggregateHours'])
character(urlbreakdown['aggregateHours'][1])
urlbreakdown$aggregateHours[1]
urlbreakdown$startDateTime[1]
query_path <- 'https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/history?aggregateHours=1&startDateTime=2017-01-01T00%3A00%3A00&endDateTime=2019-12-31T00%3A00%3A00&collectStationContributions=false&maxStations=-1&maxDistance=-1&includeNormals=false&shortColumnNames=false&sendAsDatasource=false&allowAsynch=false&contentType=csv&unitGroup=us&key=CCZKWZ2TPJCPLQ5JDCH5QPCA8&locations=Gaithersburg%2C%20MD'
url <- URLdecode(query_path)
base_path = paste(url_parse(url)$scheme,'://',url_parse(url)$domain,'/',url_parse(url)$path,sep = "")
urlbreakdown <- param_get(url)
urlbreakdown$startDateTime[1]
request <- GET(url=base_path,
query=list(aggregateHours=urlbreakdown$aggregateHours[1],
startDateTime=urlbreakdown$startDateTime[1],
endDateTime=urlbreakdown$endDateTime[1],
collectStationContributions=urlbreakdown$collectStationContributions[1],
maxStations=urlbreakdown$maxStations[1],
maxDistance=urlbreakdown$maxDistance[1],
includeNormals=urlbreakdown$includeNormals[1],
shortColumnNames=urlbreakdown$shortColumnNames[1],
sendAsDataSource=urlbreakdown$sendAsDatasource[1],
allowAsynch=urlbreakdown$allowAsynch[1],
contentType=urlbreakdown$contentType[1],
unitGroup=urlbreakdown$unitGroup[1],
key=urlbreakdown$key[1],
locations=urlbreakdown$locations[1]))
request <- GET(url=base_path,
query=list(aggregateHours=urlbreakdown$aggregateHours[1],
startDateTime=urlbreakdown$startDateTime[1],
endDateTime=urlbreakdown$endDateTime[1],
shortColumnNames=urlbreakdown$shortColumnNames[1],
unitGroup=urlbreakdown$unitGroup[1],
key=urlbreakdown$key[1],
locations=urlbreakdown$locations[1]))
request$content
response <- content(request, as = "csv", encoding = "UTF-8")
response <- content(request, as = "text", encoding = "UTF-8")
setwd("~/ANLY 512/Final_Project")
read.csv('hrlyWeather01-2017_12-2019.csv')
weather <- read.csv('hrlyWeather01-2017_12-2019.csv')
